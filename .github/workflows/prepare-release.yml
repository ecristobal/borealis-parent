name: Prepare new version release

on:
  workflow_dispatch:
    inputs:
      release-type:
        description: 'Changes to release'
        required: true
        default: 'Incremental'
        type: choice
        options:
        - Breaking
        - Non-breaking
        - Bugfix

jobs:
  prepare-release:
    name: Prepare Borealis parent artifact release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'
          cache: 'maven'
          server-id: github

      - name: View settings.xml
        run: cat /home/runner/.m2/settings.xml

      - name: Configure Git User
        run: |
          git config user.email "actions@github.com"
          git config user.name "GitHub Actions"

      - name: Generate release and development version numbers
        id: generate-versions
        run: |
          case ${{ github.event.inputs.release-type }} in \
              "Breaking" ) \
                  NEXT_MAJOR_VERSION=$(./mvnw build-helper:parse-version help:evaluate -Dexpression=parsedVersion.nextMajorVersion -q -DforceStdout);; \
                  NEXT_MINOR_VERSION=0;; \
                  NEXT_INCREMENTAL_VERSION=0;; \
              "Non-breaking" ) \
                  NEXT_MAJOR_VERSION=$(./mvnw build-helper:parse-version help:evaluate -Dexpression=parsedVersion.majorVersion -q -DforceStdout);; \
                  NEXT_MINOR_VERSION=$(./mvnw build-helper:parse-version help:evaluate -Dexpression=parsedVersion.nextMinorVersion -q -DforceStdout);; \
                  NEXT_INCREMENTAL_VERSION=0;; \
              "Bugfix" ) \
                  NEXT_MAJOR_VERSION=$(./mvnw build-helper:parse-version help:evaluate -Dexpression=parsedVersion.majorVersion -q -DforceStdout);; \
                  NEXT_MINOR_VERSION=$(./mvnw build-helper:parse-version help:evaluate -Dexpression=parsedVersion.minorVersion -q -DforceStdout);; \
                  NEXT_INCREMENTAL_VERSION=$(./mvnw build-helper:parse-version help:evaluate -Dexpression=parsedVersion.nextIncrementalVersion -q -DforceStdout);; \
          esac
          CURRENT_VERSION=$(./mvnw build-helper:parse-version help:evaluate -Dexpression=project.version -q -DforceStdout)
          RELEASE_VERSION=${CURRENT_VERSION%"-SNAPSHOT}
          DEVELOPMENT_VERSION=$NEXT_MAJOR_VERSION.$NEXT_MINOR_VERSION.$NEXT_INCREMENTAL_VERSION-SNAPSHOT
          echo "::set-output name=release::$RELEASE_VERSION"
          echo "::set-output name=development::$DEVELOPMENT_VERSION"

      - name: Prepare artifact release
        run: |
          ./mvnw -B release:prepare \
          -DreleaseVersion=${{ steps.generate-versions.outputs.release }} \
          -DdevelopmentVersion=${{ steps.generate-versions.outputs.development }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
